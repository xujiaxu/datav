{"queryPath":"/index.js","absPath":"/Users/jiaxuxu/study/datav/bar-gradient/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    this.chart = Chart.init(this.container[0]);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    this.chart.setOption(this.optionData(cfg));\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    this.chart.resize({\n     width: width,\n     height: height\n    })\n  },\n  optionData (config) {\n    return {\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      legend: {\n        right: config.legend.right,\n        textStyle: {\n          color: '#fff',\n          fontSize: 13,\n        },\n        itemWidth: 30,\n        itemHeight: 15,\n        itemGap: 45,\n        icon: 'rect',\n        data: ['受理户数', '接电户数']\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      yAxis: [{\n        axisTick: {\n            show: false\n        },\n        axisLine: {\n            show: false,\n        },\n        axisLabel: {\n            color: '#fff',\n            fontSize: 13\n        },\n        type: 'category',\n        position: 'left',\n        data: [`装表\\n临时用电`, '增容', '新装']\n      }],\n      xAxis: [{\n        show: false,\n        axisTick: {\n            show: false\n        },\n        type: 'value',\n        min: 0,\n        max: 1300,\n        inverse: false,\n        axisLine: {\n          show: false,\n        },\n        axisLabel: {\n          color: '#01eaff'\n        }\n      }],\n      series: [\n        {\n          name: '受理户数',\n          align: 'left',\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              color:new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#106bc9'\n              }, {\n                offset: 1,\n                color: '#2cb9e2'\n              }], false),\n              barBorderRadius: 16\n            }\n          },\n          barWidth: '16',\n          label: {\n            formatter: '{c}万个',\n            show: true,\n            position: 'right',\n            textStyle: {\n              color: '#01eaff'\n            }\n          },\n          data: [321, 457, 789],\n        },\n        {\n          name: '接电户数',\n          align: 'left',\n          type: 'bar',\n          barGap: '99%',\n          barWidth: '16',\n          itemStyle: {\n            normal: {\n              color:new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#c08d02'\n              }, {\n                offset: 1,\n                color: '#e7e400'\n              }], false),\n              barBorderRadius: 16,\n            }\n          },\n          label: {\n            formatter: '{c}万个',\n            show: true,\n            position: 'right',\n            textStyle: {\n              color: '#01eaff'\n            }\n          },\n          data: [347, 347, 654],\n        }\n      ]\n    }\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.chart = Chart.init(this.container[0]);\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    this.chart.setOption(this.optionData(cfg));\n\n    this.updateStyle();\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n\n    this.chart.resize({\n      width: width,\n      height: height\n    });\n  },\n  optionData: function optionData(config) {\n    return {\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      legend: {\n        right: config.legend.right,\n        textStyle: {\n          color: '#fff',\n          fontSize: 13\n        },\n        itemWidth: 30,\n        itemHeight: 15,\n        itemGap: 45,\n        icon: 'rect',\n        data: ['受理户数', '接电户数']\n      },\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        }\n      },\n      yAxis: [{\n        axisTick: {\n          show: false\n        },\n        axisLine: {\n          show: false\n        },\n        axisLabel: {\n          color: '#fff',\n          fontSize: 13\n        },\n        type: 'category',\n        position: 'left',\n        data: ['\\u88C5\\u8868\\n\\u4E34\\u65F6\\u7528\\u7535', '增容', '新装']\n      }],\n      xAxis: [{\n        show: false,\n        axisTick: {\n          show: false\n        },\n        type: 'value',\n        min: 0,\n        max: 1300,\n        inverse: false,\n        axisLine: {\n          show: false\n        },\n        axisLabel: {\n          color: '#01eaff'\n        }\n      }],\n      series: [{\n        name: '受理户数',\n        align: 'left',\n        type: 'bar',\n        itemStyle: {\n          normal: {\n            color: new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: '#106bc9'\n            }, {\n              offset: 1,\n              color: '#2cb9e2'\n            }], false),\n            barBorderRadius: 16\n          }\n        },\n        barWidth: '16',\n        label: {\n          formatter: '{c}万个',\n          show: true,\n          position: 'right',\n          textStyle: {\n            color: '#01eaff'\n          }\n        },\n        data: [321, 457, 789]\n      }, {\n        name: '接电户数',\n        align: 'left',\n        type: 'bar',\n        barGap: '99%',\n        barWidth: '16',\n        itemStyle: {\n          normal: {\n            color: new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n              offset: 0,\n              color: '#c08d02'\n            }, {\n              offset: 1,\n              color: '#e7e400'\n            }], false),\n            barBorderRadius: 16\n          }\n        },\n        label: {\n          formatter: '{c}万个',\n          show: true,\n          position: 'right',\n          textStyle: {\n            color: '#01eaff'\n          }\n        },\n        data: [347, 347, 654]\n      }]\n    };\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/echarts/index.js\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  var Chart = require('/node_modules/echarts/index.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.chart = Chart.init(this.container[0]);\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n      this.chart.setOption(this.optionData(cfg));\n\n      this.updateStyle();\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n\n      this.chart.resize({\n        width: width,\n        height: height });\n\n    },\n    optionData: function optionData(config) {\n      return {\n        grid: {\n          left: config.grid.left,\n          right: config.grid.right,\n          top: config.grid.top,\n          bottom: config.grid.bottom,\n          containLabel: true },\n\n        legend: {\n          right: config.legend.right,\n          textStyle: {\n            color: '#fff',\n            fontSize: 13 },\n\n          itemWidth: 30,\n          itemHeight: 15,\n          itemGap: 45,\n          icon: 'rect',\n          data: ['受理户数', '接电户数'] },\n\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow' } },\n\n\n        yAxis: [{\n          axisTick: {\n            show: false },\n\n          axisLine: {\n            show: false },\n\n          axisLabel: {\n            color: '#fff',\n            fontSize: 13 },\n\n          type: 'category',\n          position: 'left',\n          data: ['\\u88C5\\u8868\\n\\u4E34\\u65F6\\u7528\\u7535', '增容', '新装'] }],\n\n        xAxis: [{\n          show: false,\n          axisTick: {\n            show: false },\n\n          type: 'value',\n          min: 0,\n          max: 1300,\n          inverse: false,\n          axisLine: {\n            show: false },\n\n          axisLabel: {\n            color: '#01eaff' } }],\n\n\n        series: [{\n          name: '受理户数',\n          align: 'left',\n          type: 'bar',\n          itemStyle: {\n            normal: {\n              color: new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#106bc9' },\n              {\n                offset: 1,\n                color: '#2cb9e2' }],\n              false),\n              barBorderRadius: 16 } },\n\n\n          barWidth: '16',\n          label: {\n            formatter: '{c}万个',\n            show: true,\n            position: 'right',\n            textStyle: {\n              color: '#01eaff' } },\n\n\n          data: [321, 457, 789] },\n        {\n          name: '接电户数',\n          align: 'left',\n          type: 'bar',\n          barGap: '99%',\n          barWidth: '16',\n          itemStyle: {\n            normal: {\n              color: new Chart.graphic.LinearGradient(0, 0, 1, 0, [{\n                offset: 0,\n                color: '#c08d02' },\n              {\n                offset: 1,\n                color: '#e7e400' }],\n              false),\n              barBorderRadius: 16 } },\n\n\n          label: {\n            formatter: '{c}万个',\n            show: true,\n            position: 'right',\n            textStyle: {\n              color: '#01eaff' } },\n\n\n          data: [347, 347, 654] }] };\n\n\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1584026191791,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":125,"end":134,"loc":{"start":{"line":6,"column":20},"end":{"line":6,"column":29}},"extra":{"rawValue":"echarts","raw":"'echarts'"},"value":"/node_modules/echarts/index.js"}]}