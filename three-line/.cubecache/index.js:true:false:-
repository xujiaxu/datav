{"queryPath":"/index.js","absPath":"/Users/jiaxuxu/study/datav/three-line/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\nimport './index.less';\nlet curCfg = null;\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    this.chart = Chart.init(this.container[0]);\n    // this.chart = Chart.init(this.container[0]);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    let cfg = this.mergeConfig(config);\n    // curCfg = cfg;\n    // if (this.chart) {\n    //   this.chart.clear();\n    //   this.container.empty();\n    // }\n    // let chartDom;\n    // let domList = [];\n    // for (let i = 0; i < 3; i++) {\n    //   const curDom = document.createElement('div');\n    //   if (i < 2) {\n    //     curDom.classList.add('item');\n    //     curDom.classList.add(`item-${i + 1}`);\n    //     curDom.style.background = `url(${cfg.dot1}) no-repeat  0 6px `;\n    //     if (i === 0) {\n    //       curDom.innerText = '用电类别';\n    //       curDom.style.background = `url(${cfg.dot2}) no-repeat  0 6px `;\n    //     } else {\n    //       curDom.innerText = '行业分类';\n    //     }\n    //     domList.push(curDom);\n    //   } else {\n    //     curDom.classList.add('chart');\n    //     chartDom = curDom;\n    //   }\n    //   this.container[0].appendChild(curDom);\n    // }\n    // this.chart = Chart.init(chartDom); \n    this.chart.setOption(this.optionData(data, cfg));\n    // let domList = document.querySelectorAll('.item');\n    // for (let i = 0; i < domList.length; i++) {\n    //   let that = this;\n    //   domList[i].onclick = function() {\n    //     for (let i = 0; i < domList.length; i++) {\n    //       domList[i].style.background = `url(${cfg.dot1}) no-repeat  0 6px `;\n    //     }\n    //     domList[i].style.background = `url(${cfg.dot2}) no-repeat  0 6px `;\n    //     i === 0 ? that.chart.setOption(that.optionData(data.data1, curCfg)) : that.chart.setOption(that.optionData(data.data2, curCfg));\n    //   }\n    // }\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  optionData(data, config) {\n    const xAxisData = [];\n    const yAxisData1 = [];\n    const yAxisData2 = [];\n    const yAxisData3 = [];\n    data.forEach(item => {\n      let curStr = '';\n      if (item.name.length <= 4) {\n        curStr = item.name;\n      }\n      if (item.name.length > 4) {\n        curStr = `${item.name.slice(0, 4)}\\n${item.name.slice(4)}`;\n      }\n      if (item.name.length > 8) {\n        curStr = `${item.name.slice(0, 4)}\\n${item.name.slice(4, 8)}\\n${item.name.slice(8)}`;\n      }\n      xAxisData.push(curStr);\n      yAxisData1.push(item.value1);\n      yAxisData2.push(item.value2);\n      yAxisData3.push(item.value3);\n    });\n    return {\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            type: 'solid',\n            width: 2,\n            color: '#fff'\n          }\n        },\n        formatter: function(params) {\n          let res = params[0].name;\n          res += `<br />${params[0].seriesName} : ${params[0].value}亿元<br>${params[1].seriesName} : ${params[1].value}亿元<br>${params[2].seriesName} : ${params[2].value}亿元`;\n          return res;\n        },\n        textStyle: {\n          color: '#fff',\n          fontSize: 20,\n          fontWeight: 'bold'\n        }\n      },\n      xAxis: [{\n        type: 'category',\n        boundaryGap: false,\n        axisLabel: {\n          interval:0,  \n          rotate: 45,  \n          color: config.xAxis.axisLabel.textStyle.color,\n          fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n          fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n          margin: config.xAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.xAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false,\n        },\n        splitLine: {\n          show: false\n        },\n        data: xAxisData\n      }],\n      yAxis: [\n        {\n          type: 'value',\n          name: '亿元',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight,\n          },\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight,\n            },\n            margin: config.yAxis.axisLabel.margin\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#103062',\n              width: 1.5\n            }\n          }\n        }\n      ],\n      series: [\n        {\n          name: '力率电费',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 10,\n          itemStyle: {\n            normal: {\n              color: '#fdd100',\n              lineStyle: {\n                color: \"#fdd100\",\n                width: 2.5\n              },\n              areaStyle: {\n                //color: '#94C9EC'\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)'\n                }, {\n                  offset: 1,\n                  color: 'rgba(253, 209, 0, 0.5)'\n                }]),\n              }\n            }\n          },\n          data: yAxisData1\n        },\n        {\n          name: '基本电费',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 10,\n          itemStyle: {\n            normal: {\n              color: '#24f1ff',\n              lineStyle: {\n                color: \"#24f1ff\",\n                width: 2.5\n              },\n              areaStyle: {\n                //color: '#94C9EC'\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)'\n                }, {\n                  offset: 1,\n                  color: 'rgba(36, 241, 255, 0.5)'\n                }]),\n              }\n            }\n          },\n          markPoint: {\n            itemStyle: {\n              normal: {\n                color: 'red'\n              }\n            }\n          },\n          data: yAxisData2\n        },\n        {\n          name: '电度费用',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 8,\n          itemStyle: {\n            normal: {\n              color: '#51e0ce',\n              lineStyle: {\n                color: \"#51e0ce\",\n                width: 2.5\n              },\n              areaStyle: {\n                //color: '#94C9EC'\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)'\n                }, {\n                  offset: 1,\n                  color: 'rgba(81, 224, 206, 0.5)'\n                }]),\n              }\n            }\n          },\n          data: yAxisData3\n        }\n      ]\n    };\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    this.chart.resize({\n     width: width,\n     height: height\n    })\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nrequire('./index.less');\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\nvar curCfg = null;\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.chart = Chart.init(this.container[0]);\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n\n    this.chart.setOption(this.optionData(data, cfg));\n\n    this.updateStyle();\n  },\n  optionData: function optionData(data, config) {\n    var xAxisData = [];\n    var yAxisData1 = [];\n    var yAxisData2 = [];\n    var yAxisData3 = [];\n    data.forEach(function (item) {\n      var curStr = '';\n      if (item.name.length <= 4) {\n        curStr = item.name;\n      }\n      if (item.name.length > 4) {\n        curStr = item.name.slice(0, 4) + '\\n' + item.name.slice(4);\n      }\n      if (item.name.length > 8) {\n        curStr = item.name.slice(0, 4) + '\\n' + item.name.slice(4, 8) + '\\n' + item.name.slice(8);\n      }\n      xAxisData.push(curStr);\n      yAxisData1.push(item.value1);\n      yAxisData2.push(item.value2);\n      yAxisData3.push(item.value3);\n    });\n    return {\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        axisPointer: {\n          type: 'line',\n          lineStyle: {\n            type: 'solid',\n            width: 2,\n            color: '#fff'\n          }\n        },\n        formatter: function formatter(params) {\n          var res = params[0].name;\n          res += '<br />' + params[0].seriesName + ' : ' + params[0].value + '\\u4EBF\\u5143<br>' + params[1].seriesName + ' : ' + params[1].value + '\\u4EBF\\u5143<br>' + params[2].seriesName + ' : ' + params[2].value + '\\u4EBF\\u5143';\n          return res;\n        },\n        textStyle: {\n          color: '#fff',\n          fontSize: 20,\n          fontWeight: 'bold'\n        }\n      },\n      xAxis: [{\n        type: 'category',\n        boundaryGap: false,\n        axisLabel: {\n          interval: 0,\n          rotate: 45,\n          color: config.xAxis.axisLabel.textStyle.color,\n          fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n          fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n          margin: config.xAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.xAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false\n        },\n        data: xAxisData\n      }],\n      yAxis: [{\n        type: 'value',\n        name: '亿元',\n        nameTextStyle: {\n          color: config.yAxis.nameTextStyle.color,\n          fontSize: config.yAxis.nameTextStyle.fontSize,\n          fontWeight: config.yAxis.nameTextStyle.fontWeight\n        },\n        axisLabel: {\n          formatter: '{value}',\n          textStyle: {\n            color: config.yAxis.axisLabel.textStyle.color,\n            fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n            fontWeight: config.yAxis.axisLabel.textStyle.fontWeight\n          },\n          margin: config.yAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.yAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: true,\n          lineStyle: {\n            color: '#103062',\n            width: 1.5\n          }\n        }\n      }],\n      series: [{\n        name: '力率电费',\n        type: 'line',\n        stack: '总量',\n        symbol: 'circle',\n        symbolSize: 10,\n        itemStyle: {\n          normal: {\n            color: '#fdd100',\n            lineStyle: {\n              color: \"#fdd100\",\n              width: 2.5\n            },\n            areaStyle: {\n              color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                offset: 0,\n                color: 'rgba(255, 255, 255, 0)'\n              }, {\n                offset: 1,\n                color: 'rgba(253, 209, 0, 0.5)'\n              }])\n            }\n          }\n        },\n        data: yAxisData1\n      }, {\n        name: '基本电费',\n        type: 'line',\n        stack: '总量',\n        symbol: 'circle',\n        symbolSize: 10,\n        itemStyle: {\n          normal: {\n            color: '#24f1ff',\n            lineStyle: {\n              color: \"#24f1ff\",\n              width: 2.5\n            },\n            areaStyle: {\n              color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                offset: 0,\n                color: 'rgba(255, 255, 255, 0)'\n              }, {\n                offset: 1,\n                color: 'rgba(36, 241, 255, 0.5)'\n              }])\n            }\n          }\n        },\n        markPoint: {\n          itemStyle: {\n            normal: {\n              color: 'red'\n            }\n          }\n        },\n        data: yAxisData2\n      }, {\n        name: '电度费用',\n        type: 'line',\n        stack: '总量',\n        symbol: 'circle',\n        symbolSize: 8,\n        itemStyle: {\n          normal: {\n            color: '#51e0ce',\n            lineStyle: {\n              color: \"#51e0ce\",\n              width: 2.5\n            },\n            areaStyle: {\n              color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                offset: 0,\n                color: 'rgba(255, 255, 255, 0)'\n              }, {\n                offset: 1,\n                color: 'rgba(81, 224, 206, 0.5)'\n              }])\n            }\n          }\n        },\n        data: yAxisData3\n      }]\n    };\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n\n    this.chart.resize({\n      width: width,\n      height: height\n    });\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/index.less\", \"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/echarts/index.js\"], function (module, exports, require, load, process, global) {\n\n  require('/index.less', '');\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  var Chart = require('/node_modules/echarts/index.js');\n\n  var curCfg = null;\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.chart = Chart.init(this.container[0]);\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n\n      this.chart.setOption(this.optionData(data, cfg));\n\n      this.updateStyle();\n    },\n    optionData: function optionData(data, config) {\n      var xAxisData = [];\n      var yAxisData1 = [];\n      var yAxisData2 = [];\n      var yAxisData3 = [];\n      data.forEach(function (item) {\n        var curStr = '';\n        if (item.name.length <= 4) {\n          curStr = item.name;\n        }\n        if (item.name.length > 4) {\n          curStr = item.name.slice(0, 4) + '\\n' + item.name.slice(4);\n        }\n        if (item.name.length > 8) {\n          curStr = item.name.slice(0, 4) + '\\n' + item.name.slice(4, 8) + '\\n' + item.name.slice(8);\n        }\n        xAxisData.push(curStr);\n        yAxisData1.push(item.value1);\n        yAxisData2.push(item.value2);\n        yAxisData3.push(item.value3);\n      });\n      return {\n        grid: {\n          left: config.grid.left,\n          right: config.grid.right,\n          top: config.grid.top,\n          bottom: config.grid.bottom,\n          containLabel: true },\n\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'line',\n            lineStyle: {\n              type: 'solid',\n              width: 2,\n              color: '#fff' } },\n\n\n          formatter: function formatter(params) {\n            var res = params[0].name;\n            res += '<br />' + params[0].seriesName + ' : ' + params[0].value + '\\u4EBF\\u5143<br>' + params[1].seriesName + ' : ' + params[1].value + '\\u4EBF\\u5143<br>' + params[2].seriesName + ' : ' + params[2].value + '\\u4EBF\\u5143';\n            return res;\n          },\n          textStyle: {\n            color: '#fff',\n            fontSize: 20,\n            fontWeight: 'bold' } },\n\n\n        xAxis: [{\n          type: 'category',\n          boundaryGap: false,\n          axisLabel: {\n            interval: 0,\n            rotate: 45,\n            color: config.xAxis.axisLabel.textStyle.color,\n            fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n            fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n            margin: config.xAxis.axisLabel.margin },\n\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.xAxis.axisLine.lineStyle.width } },\n\n\n          axisTick: {\n            show: false },\n\n          splitLine: {\n            show: false },\n\n          data: xAxisData }],\n\n        yAxis: [{\n          type: 'value',\n          name: '亿元',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight },\n\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight },\n\n            margin: config.yAxis.axisLabel.margin },\n\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width } },\n\n\n          axisTick: {\n            show: false },\n\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#103062',\n              width: 1.5 } } }],\n\n\n\n        series: [{\n          name: '力率电费',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 10,\n          itemStyle: {\n            normal: {\n              color: '#fdd100',\n              lineStyle: {\n                color: \"#fdd100\",\n                width: 2.5 },\n\n              areaStyle: {\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)' },\n                {\n                  offset: 1,\n                  color: 'rgba(253, 209, 0, 0.5)' }]) } } },\n\n\n\n\n          data: yAxisData1 },\n        {\n          name: '基本电费',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 10,\n          itemStyle: {\n            normal: {\n              color: '#24f1ff',\n              lineStyle: {\n                color: \"#24f1ff\",\n                width: 2.5 },\n\n              areaStyle: {\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)' },\n                {\n                  offset: 1,\n                  color: 'rgba(36, 241, 255, 0.5)' }]) } } },\n\n\n\n\n          markPoint: {\n            itemStyle: {\n              normal: {\n                color: 'red' } } },\n\n\n\n          data: yAxisData2 },\n        {\n          name: '电度费用',\n          type: 'line',\n          stack: '总量',\n          symbol: 'circle',\n          symbolSize: 8,\n          itemStyle: {\n            normal: {\n              color: '#51e0ce',\n              lineStyle: {\n                color: \"#51e0ce\",\n                width: 2.5 },\n\n              areaStyle: {\n                color: new Chart.graphic.LinearGradient(0, 1, 0, 0, [{\n                  offset: 0,\n                  color: 'rgba(255, 255, 255, 0)' },\n                {\n                  offset: 1,\n                  color: 'rgba(81, 224, 206, 0.5)' }]) } } },\n\n\n\n\n          data: yAxisData3 }] };\n\n\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n\n      this.chart.resize({\n        width: width,\n        height: height });\n\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1591620104677,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/index.less","/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"requiresOrigin":["/index.less","/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":23,"end":37,"loc":{"start":{"line":3,"column":8},"end":{"line":3,"column":22}},"extra":{"rawValue":"./index.less","raw":"'./index.less'"},"value":"/index.less"},{"type":"StringLiteral","start":61,"end":74,"loc":{"start":{"line":5,"column":20},"end":{"line":5,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":93,"end":101,"loc":{"start":{"line":6,"column":16},"end":{"line":6,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":120,"end":128,"loc":{"start":{"line":7,"column":16},"end":{"line":7,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":151,"end":160,"loc":{"start":{"line":8,"column":20},"end":{"line":8,"column":29}},"extra":{"rawValue":"echarts","raw":"'echarts'"},"value":"/node_modules/echarts/index.js"}]}