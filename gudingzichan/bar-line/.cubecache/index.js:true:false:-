{"queryPath":"/index.js","absPath":"/Users/jiaxuxu/study/datav/gudingzichan/bar-line/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    //3.子组件实例化\n    this.chart = Chart.init(this.container[0]);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n    //更新图表\n    this.chart.setOption(this.optionData(data, cfg));\n    // this.container.html(data[0].value)\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  optionData(data, config) {\n    const xAxisData = [];\n    const yAxisData1 = [];\n    const yAxisData2 = [];\n    const yAxisData3 = [];\n    // console.log(config);\n    data.forEach(item => {\n      if (item.x.length > 4) {\n        item.x = `${item.x.slice(0, 4)}\\n${item.x.slice(4)}`\n      }\n      xAxisData.push(item.x);\n      yAxisData1.push(item.y1);\n      yAxisData2.push(item.y2);\n      yAxisData3.push(item.y3);\n    });\n    // let maxY1 = Math.max(...yAxisData1);\n    // let maxY2 = Math.max(...yAxisData3);\n    return {\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        },\n        formatter: function(params) {\n          let res = params[0].name;\n          res += `<br />${params[0].seriesName} : ${params[0].value}亿元<br>${params[1].seriesName} : ${params[1].value}亿元<br />${params[2].seriesName} : ${params[2].value}年`;\n          return res;\n        },\n        textStyle: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        }\n      },\n      legend: {\n        show: true,\n        y: '5',\n        right: config.legend.right,\n        icon: 'stack',\n        itemWidth: 30,\n        itemHeight: 15,\n        itemGap: 45,\n        textStyle: {\n          color: config.legend.textStyle.color,\n          fontSize: config.legend.textStyle.fontSize,\n          fontWeight: 'bold'\n        },\n        data: ['资产原值', '资产净值', '平均在运年限']\n      },\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      xAxis: [{\n        type: 'category',\n        interval: 0,\n        rotate: 30,\n        axisLabel: {\n          color: config.xAxis.axisLabel.textStyle.color,\n          fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n          fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n          margin: config.xAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.xAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false,\n        },\n        splitLine: {\n          show: false\n        },\n        data: xAxisData\n      }],\n      yAxis: [\n        {\n          type: 'value',\n          name: '亿元',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight,\n          },\n          min: 0,\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight,\n            },\n            margin: config.yAxis.axisLabel.margin\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: '#11366e'\n            }\n          }\n        },\n        {\n          type: 'value',\n          name: '年',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight,\n          },\n          min: 0,\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight\n            },\n            margin: config.yAxis.axisLabel.margin\n          },\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width\n            }\n          },\n          axisTick: {\n            show: false,\n          },\n          splitLine: {\n            show: false,\n          }\n        }\n      ],\n      series: [\n        {\n          name: '资产原值',\n          type: 'bar',\n          barMaxWidth: 35,\n          barGap: '10%',\n          itemStyle: {\n            color: '#3fecff'\n          },\n          data: yAxisData1\n        },\n        {\n          name: '资产净值',\n          type: 'bar',\n          barMaxWidth: 35,\n          itemStyle: {\n            color: '#173ee5'\n          },\n          data: yAxisData2\n        }, \n        {\n          name: '平均在运年限',\n          type: 'line',\n          yAxisIndex: 1,\n          symbolSize:10,\n          symbol:'circle',\n          itemStyle: {\n            color: '#fdd100'\n          },\n          lineStyle: {\n            width: 2.5\n          },\n          data: yAxisData3\n        }\n      ]\n    }\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    this.chart.resize({\n     width: width,\n     height: height\n    })\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar Chart = require('echarts');\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n\n    this.chart = Chart.init(this.container[0]);\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    data = this.data(data);\n    var cfg = this.mergeConfig(config);\n\n    this.chart.setOption(this.optionData(data, cfg));\n\n    this.updateStyle();\n  },\n  optionData: function optionData(data, config) {\n    var xAxisData = [];\n    var yAxisData1 = [];\n    var yAxisData2 = [];\n    var yAxisData3 = [];\n\n    data.forEach(function (item) {\n      if (item.x.length > 4) {\n        item.x = item.x.slice(0, 4) + '\\n' + item.x.slice(4);\n      }\n      xAxisData.push(item.x);\n      yAxisData1.push(item.y1);\n      yAxisData2.push(item.y2);\n      yAxisData3.push(item.y3);\n    });\n\n    return {\n      tooltip: {\n        show: true,\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow'\n        },\n        formatter: function formatter(params) {\n          var res = params[0].name;\n          res += '<br />' + params[0].seriesName + ' : ' + params[0].value + '\\u4EBF\\u5143<br>' + params[1].seriesName + ' : ' + params[1].value + '\\u4EBF\\u5143<br />' + params[2].seriesName + ' : ' + params[2].value + '\\u5E74';\n          return res;\n        },\n        textStyle: {\n          fontSize: 20,\n          fontWeight: 'bold'\n        }\n      },\n      legend: {\n        show: true,\n        y: '5',\n        right: config.legend.right,\n        icon: 'stack',\n        itemWidth: 30,\n        itemHeight: 15,\n        itemGap: 45,\n        textStyle: {\n          color: config.legend.textStyle.color,\n          fontSize: config.legend.textStyle.fontSize,\n          fontWeight: 'bold'\n        },\n        data: ['资产原值', '资产净值', '平均在运年限']\n      },\n      grid: {\n        left: config.grid.left,\n        right: config.grid.right,\n        top: config.grid.top,\n        bottom: config.grid.bottom,\n        containLabel: true\n      },\n      xAxis: [{\n        type: 'category',\n        interval: 0,\n        rotate: 30,\n        axisLabel: {\n          color: config.xAxis.axisLabel.textStyle.color,\n          fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n          fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n          margin: config.xAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.xAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false\n        },\n        data: xAxisData\n      }],\n      yAxis: [{\n        type: 'value',\n        name: '亿元',\n        nameTextStyle: {\n          color: config.yAxis.nameTextStyle.color,\n          fontSize: config.yAxis.nameTextStyle.fontSize,\n          fontWeight: config.yAxis.nameTextStyle.fontWeight\n        },\n        min: 0,\n        axisLabel: {\n          formatter: '{value}',\n          textStyle: {\n            color: config.yAxis.axisLabel.textStyle.color,\n            fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n            fontWeight: config.yAxis.axisLabel.textStyle.fontWeight\n          },\n          margin: config.yAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.yAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false,\n          lineStyle: {\n            color: '#11366e'\n          }\n        }\n      }, {\n        type: 'value',\n        name: '年',\n        nameTextStyle: {\n          color: config.yAxis.nameTextStyle.color,\n          fontSize: config.yAxis.nameTextStyle.fontSize,\n          fontWeight: config.yAxis.nameTextStyle.fontWeight\n        },\n        min: 0,\n        axisLabel: {\n          formatter: '{value}',\n          textStyle: {\n            color: config.yAxis.axisLabel.textStyle.color,\n            fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n            fontWeight: config.yAxis.axisLabel.textStyle.fontWeight\n          },\n          margin: config.yAxis.axisLabel.margin\n        },\n        axisLine: {\n          show: false,\n          lineStyle: {\n            color: '#0072ff',\n            width: config.yAxis.axisLine.lineStyle.width\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          show: false\n        }\n      }],\n      series: [{\n        name: '资产原值',\n        type: 'bar',\n        barMaxWidth: 35,\n        barGap: '10%',\n        itemStyle: {\n          color: '#3fecff'\n        },\n        data: yAxisData1\n      }, {\n        name: '资产净值',\n        type: 'bar',\n        barMaxWidth: 35,\n        itemStyle: {\n          color: '#173ee5'\n        },\n        data: yAxisData2\n      }, {\n        name: '平均在运年限',\n        type: 'line',\n        yAxisIndex: 1,\n        symbolSize: 10,\n        symbol: 'circle',\n        itemStyle: {\n          color: '#fdd100'\n        },\n        lineStyle: {\n          width: 2.5\n        },\n        data: yAxisData3\n      }]\n    };\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n\n    this.chart.resize({\n      width: width,\n      height: height\n    });\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/echarts/index.js\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  var Chart = require('/node_modules/echarts/index.js');\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n\n      this.chart = Chart.init(this.container[0]);\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      data = this.data(data);\n      var cfg = this.mergeConfig(config);\n\n      this.chart.setOption(this.optionData(data, cfg));\n\n      this.updateStyle();\n    },\n    optionData: function optionData(data, config) {\n      var xAxisData = [];\n      var yAxisData1 = [];\n      var yAxisData2 = [];\n      var yAxisData3 = [];\n\n      data.forEach(function (item) {\n        if (item.x.length > 4) {\n          item.x = item.x.slice(0, 4) + '\\n' + item.x.slice(4);\n        }\n        xAxisData.push(item.x);\n        yAxisData1.push(item.y1);\n        yAxisData2.push(item.y2);\n        yAxisData3.push(item.y3);\n      });\n\n      return {\n        tooltip: {\n          show: true,\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow' },\n\n          formatter: function formatter(params) {\n            var res = params[0].name;\n            res += '<br />' + params[0].seriesName + ' : ' + params[0].value + '\\u4EBF\\u5143<br>' + params[1].seriesName + ' : ' + params[1].value + '\\u4EBF\\u5143<br />' + params[2].seriesName + ' : ' + params[2].value + '\\u5E74';\n            return res;\n          },\n          textStyle: {\n            fontSize: 20,\n            fontWeight: 'bold' } },\n\n\n        legend: {\n          show: true,\n          y: '5',\n          right: config.legend.right,\n          icon: 'stack',\n          itemWidth: 30,\n          itemHeight: 15,\n          itemGap: 45,\n          textStyle: {\n            color: config.legend.textStyle.color,\n            fontSize: config.legend.textStyle.fontSize,\n            fontWeight: 'bold' },\n\n          data: ['资产原值', '资产净值', '平均在运年限'] },\n\n        grid: {\n          left: config.grid.left,\n          right: config.grid.right,\n          top: config.grid.top,\n          bottom: config.grid.bottom,\n          containLabel: true },\n\n        xAxis: [{\n          type: 'category',\n          interval: 0,\n          rotate: 30,\n          axisLabel: {\n            color: config.xAxis.axisLabel.textStyle.color,\n            fontSize: config.xAxis.axisLabel.textStyle.fontSize,\n            fontWeight: config.xAxis.axisLabel.textStyle.fontWeight,\n            margin: config.xAxis.axisLabel.margin },\n\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.xAxis.axisLine.lineStyle.width } },\n\n\n          axisTick: {\n            show: false },\n\n          splitLine: {\n            show: false },\n\n          data: xAxisData }],\n\n        yAxis: [{\n          type: 'value',\n          name: '亿元',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight },\n\n          min: 0,\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight },\n\n            margin: config.yAxis.axisLabel.margin },\n\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width } },\n\n\n          axisTick: {\n            show: false },\n\n          splitLine: {\n            show: false,\n            lineStyle: {\n              color: '#11366e' } } },\n\n\n        {\n          type: 'value',\n          name: '年',\n          nameTextStyle: {\n            color: config.yAxis.nameTextStyle.color,\n            fontSize: config.yAxis.nameTextStyle.fontSize,\n            fontWeight: config.yAxis.nameTextStyle.fontWeight },\n\n          min: 0,\n          axisLabel: {\n            formatter: '{value}',\n            textStyle: {\n              color: config.yAxis.axisLabel.textStyle.color,\n              fontSize: config.yAxis.axisLabel.textStyle.fontSize,\n              fontWeight: config.yAxis.axisLabel.textStyle.fontWeight },\n\n            margin: config.yAxis.axisLabel.margin },\n\n          axisLine: {\n            show: false,\n            lineStyle: {\n              color: '#0072ff',\n              width: config.yAxis.axisLine.lineStyle.width } },\n\n\n          axisTick: {\n            show: false },\n\n          splitLine: {\n            show: false } }],\n\n\n        series: [{\n          name: '资产原值',\n          type: 'bar',\n          barMaxWidth: 35,\n          barGap: '10%',\n          itemStyle: {\n            color: '#3fecff' },\n\n          data: yAxisData1 },\n        {\n          name: '资产净值',\n          type: 'bar',\n          barMaxWidth: 35,\n          itemStyle: {\n            color: '#173ee5' },\n\n          data: yAxisData2 },\n        {\n          name: '平均在运年限',\n          type: 'line',\n          yAxisIndex: 1,\n          symbolSize: 10,\n          symbol: 'circle',\n          itemStyle: {\n            color: '#fdd100' },\n\n          lineStyle: {\n            width: 2.5 },\n\n          data: yAxisData3 }] };\n\n\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n\n      this.chart.resize({\n        width: width,\n        height: height });\n\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1585477682320,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/echarts/index.js"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":125,"end":134,"loc":{"start":{"line":6,"column":20},"end":{"line":6,"column":29}},"extra":{"rawValue":"echarts","raw":"'echarts'"},"value":"/node_modules/echarts/index.js"}]}