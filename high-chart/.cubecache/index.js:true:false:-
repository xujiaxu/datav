{"queryPath":"/index.js","absPath":"/Users/jiaxuxu/study/datav/high-chart/index.js","realPath":"/index.js","type":"script","source":"var Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar highChart = require('highcharts');\nvar highcharts3d = require('highcharts/highcharts-3d');\nrequire('./index.less');\nlet curData = null;\nlet curCfg = null;\n/**\n * 马良基础类\n */\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  }\n  this.container = $(container);           //容器\n  this.apis = config.apis;                 //hook一定要有\n  this._data = null;                       //数据\n  this.chart = null;                       //图表\n  this.init(config);\n}, {\n  /**\n   * 公有初始化\n   */\n  init: function (config) {\n    //1.初始化,合并配置\n    this.mergeConfig(config);\n    //2.刷新布局,针对有子组件的组件 可有可无\n    this.updateLayout();\n    highcharts3d(highChart);\n    //3.子组件实例化\n    //this.chart = new Chart(this.container[0], this.config);\n    //4.如果有需要, 更新样式\n    this.updateStyle();\n  },\n  /**\n   * 绘制\n   * @param data\n   * @param options 不一定有\n   * !!注意: 第二个参数支持config, 就不需要updateOptions这个方法了\n   */\n  render: function (data, config) {\n    data = this.data(data);\n    curData = data;\n    var cfg = this.mergeConfig(config);\n    curCfg = cfg;\n    // this.container[0].setAttribute('id', 'container');\n    // console.log(highChart, this.container[0]);\n    highChart.chart(this.container[0], this.optionData(data, cfg));\n    //更新图表\n    //this.chart.render(data, cfg);\n    // this.container.html(data[0].value)\n    //如果有需要的话,更新样式\n    this.updateStyle();\n  },\n  optionData(data, config) {\n    return {\n      chart: {\n        type: 'pie',\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0\n        },\n        backgroundColor: 'transparent'\n      },\n      title: {\n        text: ''\n      },\n      tooltip: {\n        headerFormat: '{series.name}<br>',\n\t\t    pointFormat: '{point.name}: <b>{point.percentage:.1f}%</b>',\n        style: {\n          fontSize: '28px'\n        }\n      },\n      colors:['#0FCEB4', '#F3D200', '#00AFFD', '#FA4A79', '#4A63F0', '#FF48F0'],\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          depth: 35,\n          size: config.pieSize,\n          dataLabels: {\n            enabled: true,\n            style: {\n              fontSize: `${config.size}px`,\n              color: '#fff',\n              textOutline: 'none'\n            },\n            format: '{point.name}<br><br>{y}个<br><br>{point.percentage:.1f}%'\n          }\n        }\n      },\n      series: [{\n        type: 'pie',\n        name: '故障类型分布',\n        data: data\n      }]\n    };\n  },\n  /**\n   *\n   * @param width\n   * @param height\n   */\n  resize: function (width, height) {\n    this.updateLayout(width, height);\n    //更新图表\n    highcharts3d(highChart)\n    highChart.chart(this.container[0], this.optionData(curData, curCfg));\n  },\n  /**\n   * 每个组件根据自身需要,从主题中获取颜色 覆盖到自身配置的颜色中.\n   * 暂时可以不填内容\n   */\n  setColors: function () {\n    //比如\n    //var cfg = this.config;\n    //cfg.color = cfg.theme.series[0] || cfg.color;\n  },\n  /**\n   * 数据,设置和获取数据\n   * @param data\n   * @returns {*|number}\n   */\n  data: function (data) {\n    if (data) {\n      this._data = data;\n    }\n    return this._data;\n  },\n  /**\n   * 更新配置\n   * 优先级: config.colors > config.theme > this.config.theme > this.config.colors\n   * [注] 有数组的配置一定要替换\n   * @param config\n   * @private\n   */\n  mergeConfig: function (config) {\n    if (!config) {return this.config}\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n  /**\n   * 更新布局\n   * 可有可无\n   */\n  updateLayout: function () {},\n  /**\n   * 更新样式\n   * 有些子组件控制不到的,但是需要控制改变的,在这里实现\n   */\n  updateStyle: function () {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n  /**\n   * 更新配置\n   * !!注意:如果render支持第二个参数options, 那updateOptions不是必须的\n   */\n  //updateOptions: function (options) {},\n  /**\n   * 更新某些配置\n   * 给可以增量更新配置的组件用\n   */\n  //updateXXX: function () {},\n  /**\n   * 销毁组件\n   */\n   destroy: function(){console.log('请实现 destroy 方法')}\n});","code":"'use strict';\n\nvar Event = require('bcore/event');\nvar $ = require('jquery');\nvar _ = require('lodash');\nvar highChart = require('highcharts');\nvar highcharts3d = require('highcharts/highcharts-3d');\nrequire('./index.less');\nvar curData = null;\nvar curCfg = null;\n\nmodule.exports = Event.extend(function Base(container, config) {\n  this.config = {\n    theme: {}\n  };\n  this.container = $(container);\n  this.apis = config.apis;\n  this._data = null;\n  this.chart = null;\n  this.init(config);\n}, {\n  init: function init(config) {\n    this.mergeConfig(config);\n\n    this.updateLayout();\n    highcharts3d(highChart);\n\n    this.updateStyle();\n  },\n\n  render: function render(data, config) {\n    data = this.data(data);\n    curData = data;\n    var cfg = this.mergeConfig(config);\n    curCfg = cfg;\n\n    highChart.chart(this.container[0], this.optionData(data, cfg));\n\n    this.updateStyle();\n  },\n  optionData: function optionData(data, config) {\n    return {\n      chart: {\n        type: 'pie',\n        options3d: {\n          enabled: true,\n          alpha: 45,\n          beta: 0\n        },\n        backgroundColor: 'transparent'\n      },\n      title: {\n        text: ''\n      },\n      tooltip: {\n        headerFormat: '{series.name}<br>',\n        pointFormat: '{point.name}: <b>{point.percentage:.1f}%</b>',\n        style: {\n          fontSize: '28px'\n        }\n      },\n      colors: ['#0FCEB4', '#F3D200', '#00AFFD', '#FA4A79', '#4A63F0', '#FF48F0'],\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          depth: 35,\n          size: config.pieSize,\n          dataLabels: {\n            enabled: true,\n            style: {\n              fontSize: config.size + 'px',\n              color: '#fff',\n              textOutline: 'none'\n            },\n            format: '{point.name}<br><br>{y}个<br><br>{point.percentage:.1f}%'\n          }\n        }\n      },\n      series: [{\n        type: 'pie',\n        name: '故障类型分布',\n        data: data\n      }]\n    };\n  },\n\n  resize: function resize(width, height) {\n    this.updateLayout(width, height);\n\n    highcharts3d(highChart);\n    highChart.chart(this.container[0], this.optionData(curData, curCfg));\n  },\n\n  setColors: function setColors() {},\n\n  data: function data(_data) {\n    if (_data) {\n      this._data = _data;\n    }\n    return this._data;\n  },\n\n  mergeConfig: function mergeConfig(config) {\n    if (!config) {\n      return this.config;\n    }\n    this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n    this.setColors();\n    this.config = _.defaultsDeep(config || {}, this.config);\n    return this.config;\n  },\n\n  updateLayout: function updateLayout() {},\n\n  updateStyle: function updateStyle() {\n    var cfg = this.config;\n    this.container.css({\n      'font-size': cfg.size + 'px',\n      'color': cfg.color || '#fff'\n    });\n  },\n\n  destroy: function destroy() {\n    console.log('请实现 destroy 方法');\n  }\n});","codeWraped":"Cube(\"/index.js\", [\"/node_modules/bcore/event.js\", \"/node_modules/jquery/dist/jquery.js\", \"/node_modules/lodash/lodash.js\", \"/node_modules/highcharts/highcharts.js\", \"/node_modules/highcharts/highcharts-3d.js\", \"/index.less\"], function (module, exports, require, load, process, global) {\n\n  var Event = require('/node_modules/bcore/event.js');\n  var $ = require('/node_modules/jquery/dist/jquery.js');\n  var _ = require('/node_modules/lodash/lodash.js');\n  var highChart = require('/node_modules/highcharts/highcharts.js');\n  var highcharts3d = require('/node_modules/highcharts/highcharts-3d.js');\n  require('/index.less', '');\n  var curData = null;\n  var curCfg = null;\n\n  module.exports = Event.extend(function Base(container, config) {\n    this.config = {\n      theme: {} };\n\n    this.container = $(container);\n    this.apis = config.apis;\n    this._data = null;\n    this.chart = null;\n    this.init(config);\n  }, {\n    init: function init(config) {\n      this.mergeConfig(config);\n\n      this.updateLayout();\n      highcharts3d(highChart);\n\n      this.updateStyle();\n    },\n\n    render: function render(data, config) {\n      data = this.data(data);\n      curData = data;\n      var cfg = this.mergeConfig(config);\n      curCfg = cfg;\n\n      highChart.chart(this.container[0], this.optionData(data, cfg));\n\n      this.updateStyle();\n    },\n    optionData: function optionData(data, config) {\n      return {\n        chart: {\n          type: 'pie',\n          options3d: {\n            enabled: true,\n            alpha: 45,\n            beta: 0 },\n\n          backgroundColor: 'transparent' },\n\n        title: {\n          text: '' },\n\n        tooltip: {\n          headerFormat: '{series.name}<br>',\n          pointFormat: '{point.name}: <b>{point.percentage:.1f}%</b>',\n          style: {\n            fontSize: '28px' } },\n\n\n        colors: ['#0FCEB4', '#F3D200', '#00AFFD', '#FA4A79', '#4A63F0', '#FF48F0'],\n        plotOptions: {\n          pie: {\n            allowPointSelect: true,\n            cursor: 'pointer',\n            depth: 35,\n            size: config.pieSize,\n            dataLabels: {\n              enabled: true,\n              style: {\n                fontSize: config.size + 'px',\n                color: '#fff',\n                textOutline: 'none' },\n\n              format: '{point.name}<br><br>{y}个<br><br>{point.percentage:.1f}%' } } },\n\n\n\n        series: [{\n          type: 'pie',\n          name: '故障类型分布',\n          data: data }] };\n\n\n    },\n\n    resize: function resize(width, height) {\n      this.updateLayout(width, height);\n\n      highcharts3d(highChart);\n      highChart.chart(this.container[0], this.optionData(curData, curCfg));\n    },\n\n    setColors: function setColors() {},\n\n    data: function data(_data) {\n      if (_data) {\n        this._data = _data;\n      }\n      return this._data;\n    },\n\n    mergeConfig: function mergeConfig(config) {\n      if (!config) {\n        return this.config;\n      }\n      this.config.theme = _.defaultsDeep(config.theme || {}, this.config.theme);\n      this.setColors();\n      this.config = _.defaultsDeep(config || {}, this.config);\n      return this.config;\n    },\n\n    updateLayout: function updateLayout() {},\n\n    updateStyle: function updateStyle() {\n      var cfg = this.config;\n      this.container.css({\n        'font-size': cfg.size + 'px',\n        'color': cfg.color || '#fff' });\n\n    },\n\n    destroy: function destroy() {\n      console.log('请实现 destroy 方法');\n    } });return module.exports;});","sourceMap":null,"modifyTime":1591448491176,"mime":"application/javascript","wrap":true,"skip":false,"compress":false,"ext":".js","targetExt":".js","loads":[],"originalLoads":[],"requires":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/highcharts/highcharts.js","/node_modules/highcharts/highcharts-3d.js","/index.less"],"requiresOrigin":["/node_modules/bcore/event.js","/node_modules/jquery/dist/jquery.js","/node_modules/lodash/lodash.js","/node_modules/highcharts/highcharts.js","/node_modules/highcharts/highcharts-3d.js","/index.less"],"debugInfo":[],"requiresArgsRefer":[{"type":"StringLiteral","start":35,"end":48,"loc":{"start":{"line":3,"column":20},"end":{"line":3,"column":33}},"extra":{"rawValue":"bcore/event","raw":"'bcore/event'"},"value":"/node_modules/bcore/event.js"},{"type":"StringLiteral","start":67,"end":75,"loc":{"start":{"line":4,"column":16},"end":{"line":4,"column":24}},"extra":{"rawValue":"jquery","raw":"'jquery'"},"value":"/node_modules/jquery/dist/jquery.js"},{"type":"StringLiteral","start":94,"end":102,"loc":{"start":{"line":5,"column":16},"end":{"line":5,"column":24}},"extra":{"rawValue":"lodash","raw":"'lodash'"},"value":"/node_modules/lodash/lodash.js"},{"type":"StringLiteral","start":129,"end":141,"loc":{"start":{"line":6,"column":24},"end":{"line":6,"column":36}},"extra":{"rawValue":"highcharts","raw":"'highcharts'"},"value":"/node_modules/highcharts/highcharts.js"},{"type":"StringLiteral","start":171,"end":197,"loc":{"start":{"line":7,"column":27},"end":{"line":7,"column":53}},"extra":{"rawValue":"highcharts/highcharts-3d","raw":"'highcharts/highcharts-3d'"},"value":"/node_modules/highcharts/highcharts-3d.js"},{"type":"StringLiteral","start":208,"end":222,"loc":{"start":{"line":8,"column":8},"end":{"line":8,"column":22}},"extra":{"rawValue":"./index.less","raw":"'./index.less'"},"value":"/index.less"}]}